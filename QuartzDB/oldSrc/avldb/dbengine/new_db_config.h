//////////////////////////////////////////////////////////////////////////////
//																			//
//																			//
//					ADDRESS MAP FOR DATABASE								//			
//																			//
//																			//
//////////////////////////////////////////////////////////////////////////////
//051012
#include "Basic_typedefs.h"



//	#define DBDATAFILE_START_ADDRESS	(0x10000000+ 0x200000)//AREA FOR DB DATA FILE
	
	//Fixed And variable data 343200 + 1.5M + 16K = 0x1d7ca0(1932448 byte)

	#define DATAFILE_PAGE_SIZE						131072	//102400
	#define DATAFILE_PAGE_NUMBER					12
		
	#define INDEXFILE_PAGE_SIZE					131072	//102400
	#define INDEXFILE_PAGE_NUMBER				 	24		
		
	#define DICTIONARYFILE_START_ADDRESS			END_OF_HEAP
	#define DICTIONARYFILE_START_ADDRESS_SIZE	4096	//4k
	#define DICTIONARYFILE_START_ADDRESS_END		DICTIONARYFILE_START_ADDRESS + DICTIONARYFILE_START_ADDRESS_SIZE

	#define DATAFILE_START_ADDRESS					DICTIONARYFILE_START_ADDRESS_END
	#define DATAFILE_START_ADDRESS_SIZE				DATAFILE_PAGE_SIZE*DATAFILE_PAGE_NUMBER
	#define DATAFILE_START_ADDRESS_END				DATAFILE_START_ADDRESS + DATAFILE_START_ADDRESS_SIZE

	#define INDEXFILE_START_ADDRESS					DATAFILE_START_ADDRESS_END
	#define INDEXFILE_START_ADDRESS_SIZE				INDEXFILE_PAGE_SIZE*INDEXFILE_PAGE_NUMBER
	#define INDEXFILE_START_ADDRESS_END				INDEXFILE_START_ADDRESS + INDEXFILE_START_ADDRESS_SIZE


	//
	//chungwook..20050822..use this area as buffer forworded to 2th parameter of api_insert()
	//
	#define SAVE_COLUMNVALUE_TEMPBUFFER				INDEXFILE_START_ADDRESS_END
	#define SAVE_COLUMNVALUE_TEMPBUFFER_SIZE		0x2000		//8k
	#define SAVE_COLUMNVALUE_TEMPBUFFER_END			SAVE_COLUMNVALUE_TEMPBUFFER + SAVE_COLUMNVALUE_TEMPBUFFER_SIZE


	// use memory management module

	#define MEMORY_MANAGEMENT_DATAPAGE_ADDRESS			SAVE_COLUMNVALUE_TEMPBUFFER_END
	#define MEMORY_MANAGEMENT_DATAPAGE_ADDRESS_SIZE		0x10*DATAFILE_PAGE_NUMBER	//100byte   DATAFILE_PAGE_NUMBER
	#define MEMORY_MANAGEMENT_DATAPAGE_ADDRESS_END		MEMORY_MANAGEMENT_DATAPAGE_ADDRESS + MEMORY_MANAGEMENT_DATAPAGE_ADDRESS_SIZE

	#define MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS			MEMORY_MANAGEMENT_DATAPAGE_ADDRESS_END
	#define MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS_SIZE		0x10*INDEXFILE_PAGE_NUMBER	//100byte     INDEXFILE_PAGE_NUMBER
	#define MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS_END		MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS + MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS_SIZE


	
	// 4Mbyte - index data

	#define DB_MALLOC_START			MEMORY_MANAGEMENT_INDEXPAGE_ADDRESS_END	
//	#define DB_MALLOC_AREA_SIZE		0x425360	//4346720 byte
	#define DB_MALLOC_AREA_SIZE		1024*500	//4346720 byte	
	#define DB_MALLOC_START_END		DB_MALLOC_START + DB_MALLOC_AREA_SIZE
	// 위쪽 메모리 사용량 = 0x1d7ca0
	
	//12k - temp
	#define DBSCRATCH_START_ADDRESS		DB_MALLOC_START_END //TEMP AREA
		// 10K  byte - result data 
	//	#define DBRESULT_START_ADDRESS		DBSCRATCH_START_ADDRESS //AREA FOR SEARCHING RESULT
	//	#define DBRESULT_END_ADDRESS		DBRESULT_START_ADDRESS + 0x2800//END
		//3k
	//	#define KEYWORD_SAVE_AREA			DBSCRATCH_START_ADDRESS //KEYWORD를 저장하기 위한 메모리 
	//	#define KEYWORD_SAVE_AREA_END		KEYWORD_SAVE_AREA + 0xC00	//3K
		//3k
		#define NODE_SCRATCH_AREA 			DBSCRATCH_START_ADDRESS		//sdram area
		#define NODE_SCRATCH_AREA_END 		NODE_SCRATCH_AREA + 0x1000		//4K
		#define TMP_FREE 					NODE_SCRATCH_AREA_END			//8k
	//#define DBSCRATCH_END_ADDRESS			DBSCRATCH_START_ADDRESS + 0x100000
	#define DBAREA_SIZE 0x600000
	

